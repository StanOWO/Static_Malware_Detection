import os
import shutil
import json

# Loop through all PNG in the folder
def inspectPNG(directory: str, dataLabels: dict, item: str) -> None:
    png = os.listdir(directory)
    for counter, name in enumerate(png):
        dataLabels[item] += 1

# Loop through all items (files and folders) in the directory
def inspectFolder(directory: str, dataLabels: dict) -> None:
    if not os.path.exists(directory):
        print("Img path is not exist")
        return
    for _item in os.listdir(directory):
        if os.path.isdir(os.path.join(directory)):
            if _item not in dataLabels:    
                dataLabels[_item] = 0
            inspectPNG(f'{directory}/{_item}', dataLabels, _item)
       
def spilt_DataLabel(dataLabels: dict, itemLowerBound: int) -> None:
    keys_to_delete = []
    for key, value in dataLabels.items():
        if value < itemLowerBound:
            keys_to_delete.append(key)
    for key in keys_to_delete:
        del dataLabels[key]
      
def sort_DataLabel(dataLabels: dict) -> None:
    sorted_dataLabels = dict(sorted(dataLabels.items(), key=lambda item: item[1], reverse=True))
    dataLabels.clear()
    dataLabels.update(sorted_dataLabels)


def _renameDirectories(target: str, motif_dataset_jsonl: str) -> str:
    # Load the JSON Lines file and parse each line as JSON
    with open(motif_dataset_jsonl, 'r') as f:
        for line in f:
            data = json.loads(line)
            if data["label"] == int(target):
                return data["reported_family"]
    return None

def save_splitDataset(dataLabels: dict, png_directory: str, saved_png_directory: str, motif_dataset_jsonl: str) -> None:
    # Create saved_png_directory if it doesn't exist
    if not os.path.exists(saved_png_directory):
        os.makedirs(saved_png_directory)
    
    # Copy file from png_directory into saved_png_directory
    for class_label, count in dataLabels.items():
        dirName = _renameDirectories(class_label, motif_dataset_jsonl)
        class_dir = os.path.join(saved_png_directory, dirName)
        os.makedirs(class_dir, exist_ok=True)  # Create a subdirectory for the class label
        
        # Move PNG files associated with the class label to the corresponding subdirectory
        class_png_dir = os.path.join(png_directory, class_label)
        if os.path.exists(class_png_dir):
            for png_file in os.listdir(class_png_dir):
                src_path = os.path.join(class_png_dir, png_file)
                dst_path = os.path.join(class_dir, png_file)
                shutil.copy(src_path, dst_path)

def visualize(dataLabels: dict) -> None:
    pass

def main(png_directory, saved_png_directory, motif_dataset_jsonl, itemLowerBound):
    dataLabels = {} 
    inspectFolder(png_directory, dataLabels)
    spilt_DataLabel(dataLabels, itemLowerBound)
    sort_DataLabel(dataLabels)
    print(f'Overvew (items > {itemLowerBound}): {dataLabels}')
    save_splitDataset(dataLabels, png_directory, saved_png_directory, motif_dataset_jsonl) # 記得清除檔案內之前照片

if __name__ == '__main__':
    png_directory = "../image_data_HW"
    saved_png_directory = "image_saved_data_HW"
    motif_dataset_jsonl = "../motif_dataset.jsonl"
    itemLowerBound = 50
    
    main(png_directory, saved_png_directory, motif_dataset_jsonl, itemLowerBound)
    
    